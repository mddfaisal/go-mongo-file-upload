// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: emailbody.proto

package emailbody

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EmailBodyGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
}

func (x *EmailBodyGetRequest) Reset() {
	*x = EmailBodyGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyGetRequest) ProtoMessage() {}

func (x *EmailBodyGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyGetRequest.ProtoReflect.Descriptor instead.
func (*EmailBodyGetRequest) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{0}
}

func (x *EmailBodyGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EmailBodyGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Muid    string `protobuf:"bytes,2,opt,name=Muid,json=muid,proto3" json:"Muid,omitempty"`
	Subject string `protobuf:"bytes,3,opt,name=Subject,json=subject,proto3" json:"Subject,omitempty"`
	Html    string `protobuf:"bytes,4,opt,name=Html,json=html,proto3" json:"Html,omitempty"`
	Status  string `protobuf:"bytes,5,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
}

func (x *EmailBodyGetResponse) Reset() {
	*x = EmailBodyGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyGetResponse) ProtoMessage() {}

func (x *EmailBodyGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyGetResponse.ProtoReflect.Descriptor instead.
func (*EmailBodyGetResponse) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{1}
}

func (x *EmailBodyGetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailBodyGetResponse) GetMuid() string {
	if x != nil {
		return x.Muid
	}
	return ""
}

func (x *EmailBodyGetResponse) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailBodyGetResponse) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *EmailBodyGetResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type EmailBodyPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid    string `protobuf:"bytes,1,opt,name=Muid,json=muid,proto3" json:"Muid,omitempty"`
	Subject string `protobuf:"bytes,2,opt,name=Subject,json=subject,proto3" json:"Subject,omitempty"`
	Html    string `protobuf:"bytes,3,opt,name=Html,json=html,proto3" json:"Html,omitempty"`
}

func (x *EmailBodyPostRequest) Reset() {
	*x = EmailBodyPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyPostRequest) ProtoMessage() {}

func (x *EmailBodyPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyPostRequest.ProtoReflect.Descriptor instead.
func (*EmailBodyPostRequest) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{2}
}

func (x *EmailBodyPostRequest) GetMuid() string {
	if x != nil {
		return x.Muid
	}
	return ""
}

func (x *EmailBodyPostRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailBodyPostRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

type EmailBodyPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
}

func (x *EmailBodyPostResponse) Reset() {
	*x = EmailBodyPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyPostResponse) ProtoMessage() {}

func (x *EmailBodyPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyPostResponse.ProtoReflect.Descriptor instead.
func (*EmailBodyPostResponse) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{3}
}

func (x *EmailBodyPostResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailBodyPostResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type EmailBodyPutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Muid    string `protobuf:"bytes,2,opt,name=Muid,json=muid,proto3" json:"Muid,omitempty"`
	Subject string `protobuf:"bytes,3,opt,name=Subject,json=subject,proto3" json:"Subject,omitempty"`
	Html    string `protobuf:"bytes,4,opt,name=Html,json=html,proto3" json:"Html,omitempty"`
}

func (x *EmailBodyPutRequest) Reset() {
	*x = EmailBodyPutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyPutRequest) ProtoMessage() {}

func (x *EmailBodyPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyPutRequest.ProtoReflect.Descriptor instead.
func (*EmailBodyPutRequest) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{4}
}

func (x *EmailBodyPutRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailBodyPutRequest) GetMuid() string {
	if x != nil {
		return x.Muid
	}
	return ""
}

func (x *EmailBodyPutRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailBodyPutRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

type EmailBodyPutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
}

func (x *EmailBodyPutResponse) Reset() {
	*x = EmailBodyPutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyPutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyPutResponse) ProtoMessage() {}

func (x *EmailBodyPutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyPutResponse.ProtoReflect.Descriptor instead.
func (*EmailBodyPutResponse) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{5}
}

func (x *EmailBodyPutResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type EmailBodyDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
}

func (x *EmailBodyDeleteRequest) Reset() {
	*x = EmailBodyDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyDeleteRequest) ProtoMessage() {}

func (x *EmailBodyDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyDeleteRequest.ProtoReflect.Descriptor instead.
func (*EmailBodyDeleteRequest) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{6}
}

func (x *EmailBodyDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EmailBodyDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
}

func (x *EmailBodyDeleteResponse) Reset() {
	*x = EmailBodyDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emailbody_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBodyDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBodyDeleteResponse) ProtoMessage() {}

func (x *EmailBodyDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emailbody_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBodyDeleteResponse.ProtoReflect.Descriptor instead.
func (*EmailBodyDeleteResponse) Descriptor() ([]byte, []int) {
	return file_emailbody_proto_rawDescGZIP(), []int{7}
}

func (x *EmailBodyDeleteResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_emailbody_proto protoreflect.FileDescriptor

var file_emailbody_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x25, 0x0a, 0x13,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64,
	0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x74,
	0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42,
	0x6f, 0x64, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4d, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x75,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x48, 0x74, 0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c,
	0x22, 0x3f, 0x0a, 0x15, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x67, 0x0a, 0x13, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x22, 0x2e, 0x0a, 0x14, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x17, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x64, 0x0a, 0x0f, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x6f, 0x64, 0x79, 0x47, 0x65, 0x74, 0x54, 0x78, 0x6e, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1e, 0x2e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x68, 0x0a,
	0x10, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x78,
	0x6e, 0x12, 0x54, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x1f, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x64, 0x0a, 0x0f, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x6f, 0x64, 0x79, 0x50, 0x75, 0x74, 0x54, 0x78, 0x6e, 0x12, 0x51, 0x0a, 0x0c, 0x50, 0x75,
	0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1e, 0x2e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x70, 0x0a,
	0x12, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x78, 0x6e, 0x12, 0x5a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f,
	0x64, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emailbody_proto_rawDescOnce sync.Once
	file_emailbody_proto_rawDescData = file_emailbody_proto_rawDesc
)

func file_emailbody_proto_rawDescGZIP() []byte {
	file_emailbody_proto_rawDescOnce.Do(func() {
		file_emailbody_proto_rawDescData = protoimpl.X.CompressGZIP(file_emailbody_proto_rawDescData)
	})
	return file_emailbody_proto_rawDescData
}

var file_emailbody_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_emailbody_proto_goTypes = []interface{}{
	(*EmailBodyGetRequest)(nil),     // 0: emailbody.EmailBodyGetRequest
	(*EmailBodyGetResponse)(nil),    // 1: emailbody.EmailBodyGetResponse
	(*EmailBodyPostRequest)(nil),    // 2: emailbody.EmailBodyPostRequest
	(*EmailBodyPostResponse)(nil),   // 3: emailbody.EmailBodyPostResponse
	(*EmailBodyPutRequest)(nil),     // 4: emailbody.EmailBodyPutRequest
	(*EmailBodyPutResponse)(nil),    // 5: emailbody.EmailBodyPutResponse
	(*EmailBodyDeleteRequest)(nil),  // 6: emailbody.EmailBodyDeleteRequest
	(*EmailBodyDeleteResponse)(nil), // 7: emailbody.EmailBodyDeleteResponse
}
var file_emailbody_proto_depIdxs = []int32{
	0, // 0: emailbody.EmailBodyGetTxn.GetEmailBody:input_type -> emailbody.EmailBodyGetRequest
	2, // 1: emailbody.EmailBodyPostTxn.PostEmailBody:input_type -> emailbody.EmailBodyPostRequest
	4, // 2: emailbody.EmailBodyPutTxn.PutEmailBody:input_type -> emailbody.EmailBodyPutRequest
	6, // 3: emailbody.EmailBodyDeleteTxn.DeleteEmailBody:input_type -> emailbody.EmailBodyDeleteRequest
	1, // 4: emailbody.EmailBodyGetTxn.GetEmailBody:output_type -> emailbody.EmailBodyGetResponse
	3, // 5: emailbody.EmailBodyPostTxn.PostEmailBody:output_type -> emailbody.EmailBodyPostResponse
	5, // 6: emailbody.EmailBodyPutTxn.PutEmailBody:output_type -> emailbody.EmailBodyPutResponse
	7, // 7: emailbody.EmailBodyDeleteTxn.DeleteEmailBody:output_type -> emailbody.EmailBodyDeleteResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_emailbody_proto_init() }
func file_emailbody_proto_init() {
	if File_emailbody_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_emailbody_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emailbody_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emailbody_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emailbody_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emailbody_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyPutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emailbody_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyPutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emailbody_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emailbody_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBodyDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emailbody_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_emailbody_proto_goTypes,
		DependencyIndexes: file_emailbody_proto_depIdxs,
		MessageInfos:      file_emailbody_proto_msgTypes,
	}.Build()
	File_emailbody_proto = out.File
	file_emailbody_proto_rawDesc = nil
	file_emailbody_proto_goTypes = nil
	file_emailbody_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EmailBodyGetTxnClient is the client API for EmailBodyGetTxn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailBodyGetTxnClient interface {
	GetEmailBody(ctx context.Context, in *EmailBodyGetRequest, opts ...grpc.CallOption) (*EmailBodyGetResponse, error)
}

type emailBodyGetTxnClient struct {
	cc grpc.ClientConnInterface
}

func NewEmailBodyGetTxnClient(cc grpc.ClientConnInterface) EmailBodyGetTxnClient {
	return &emailBodyGetTxnClient{cc}
}

func (c *emailBodyGetTxnClient) GetEmailBody(ctx context.Context, in *EmailBodyGetRequest, opts ...grpc.CallOption) (*EmailBodyGetResponse, error) {
	out := new(EmailBodyGetResponse)
	err := c.cc.Invoke(ctx, "/emailbody.EmailBodyGetTxn/GetEmailBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailBodyGetTxnServer is the server API for EmailBodyGetTxn service.
type EmailBodyGetTxnServer interface {
	GetEmailBody(context.Context, *EmailBodyGetRequest) (*EmailBodyGetResponse, error)
}

// UnimplementedEmailBodyGetTxnServer can be embedded to have forward compatible implementations.
type UnimplementedEmailBodyGetTxnServer struct {
}

func (*UnimplementedEmailBodyGetTxnServer) GetEmailBody(context.Context, *EmailBodyGetRequest) (*EmailBodyGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEmailBody not implemented")
}

func RegisterEmailBodyGetTxnServer(s *grpc.Server, srv EmailBodyGetTxnServer) {
	s.RegisterService(&_EmailBodyGetTxn_serviceDesc, srv)
}

func _EmailBodyGetTxn_GetEmailBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailBodyGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailBodyGetTxnServer).GetEmailBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emailbody.EmailBodyGetTxn/GetEmailBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailBodyGetTxnServer).GetEmailBody(ctx, req.(*EmailBodyGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailBodyGetTxn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "emailbody.EmailBodyGetTxn",
	HandlerType: (*EmailBodyGetTxnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEmailBody",
			Handler:    _EmailBodyGetTxn_GetEmailBody_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "emailbody.proto",
}

// EmailBodyPostTxnClient is the client API for EmailBodyPostTxn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailBodyPostTxnClient interface {
	PostEmailBody(ctx context.Context, in *EmailBodyPostRequest, opts ...grpc.CallOption) (*EmailBodyPostResponse, error)
}

type emailBodyPostTxnClient struct {
	cc grpc.ClientConnInterface
}

func NewEmailBodyPostTxnClient(cc grpc.ClientConnInterface) EmailBodyPostTxnClient {
	return &emailBodyPostTxnClient{cc}
}

func (c *emailBodyPostTxnClient) PostEmailBody(ctx context.Context, in *EmailBodyPostRequest, opts ...grpc.CallOption) (*EmailBodyPostResponse, error) {
	out := new(EmailBodyPostResponse)
	err := c.cc.Invoke(ctx, "/emailbody.EmailBodyPostTxn/PostEmailBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailBodyPostTxnServer is the server API for EmailBodyPostTxn service.
type EmailBodyPostTxnServer interface {
	PostEmailBody(context.Context, *EmailBodyPostRequest) (*EmailBodyPostResponse, error)
}

// UnimplementedEmailBodyPostTxnServer can be embedded to have forward compatible implementations.
type UnimplementedEmailBodyPostTxnServer struct {
}

func (*UnimplementedEmailBodyPostTxnServer) PostEmailBody(context.Context, *EmailBodyPostRequest) (*EmailBodyPostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostEmailBody not implemented")
}

func RegisterEmailBodyPostTxnServer(s *grpc.Server, srv EmailBodyPostTxnServer) {
	s.RegisterService(&_EmailBodyPostTxn_serviceDesc, srv)
}

func _EmailBodyPostTxn_PostEmailBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailBodyPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailBodyPostTxnServer).PostEmailBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emailbody.EmailBodyPostTxn/PostEmailBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailBodyPostTxnServer).PostEmailBody(ctx, req.(*EmailBodyPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailBodyPostTxn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "emailbody.EmailBodyPostTxn",
	HandlerType: (*EmailBodyPostTxnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostEmailBody",
			Handler:    _EmailBodyPostTxn_PostEmailBody_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "emailbody.proto",
}

// EmailBodyPutTxnClient is the client API for EmailBodyPutTxn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailBodyPutTxnClient interface {
	PutEmailBody(ctx context.Context, in *EmailBodyPutRequest, opts ...grpc.CallOption) (*EmailBodyPutResponse, error)
}

type emailBodyPutTxnClient struct {
	cc grpc.ClientConnInterface
}

func NewEmailBodyPutTxnClient(cc grpc.ClientConnInterface) EmailBodyPutTxnClient {
	return &emailBodyPutTxnClient{cc}
}

func (c *emailBodyPutTxnClient) PutEmailBody(ctx context.Context, in *EmailBodyPutRequest, opts ...grpc.CallOption) (*EmailBodyPutResponse, error) {
	out := new(EmailBodyPutResponse)
	err := c.cc.Invoke(ctx, "/emailbody.EmailBodyPutTxn/PutEmailBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailBodyPutTxnServer is the server API for EmailBodyPutTxn service.
type EmailBodyPutTxnServer interface {
	PutEmailBody(context.Context, *EmailBodyPutRequest) (*EmailBodyPutResponse, error)
}

// UnimplementedEmailBodyPutTxnServer can be embedded to have forward compatible implementations.
type UnimplementedEmailBodyPutTxnServer struct {
}

func (*UnimplementedEmailBodyPutTxnServer) PutEmailBody(context.Context, *EmailBodyPutRequest) (*EmailBodyPutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutEmailBody not implemented")
}

func RegisterEmailBodyPutTxnServer(s *grpc.Server, srv EmailBodyPutTxnServer) {
	s.RegisterService(&_EmailBodyPutTxn_serviceDesc, srv)
}

func _EmailBodyPutTxn_PutEmailBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailBodyPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailBodyPutTxnServer).PutEmailBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emailbody.EmailBodyPutTxn/PutEmailBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailBodyPutTxnServer).PutEmailBody(ctx, req.(*EmailBodyPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailBodyPutTxn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "emailbody.EmailBodyPutTxn",
	HandlerType: (*EmailBodyPutTxnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutEmailBody",
			Handler:    _EmailBodyPutTxn_PutEmailBody_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "emailbody.proto",
}

// EmailBodyDeleteTxnClient is the client API for EmailBodyDeleteTxn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailBodyDeleteTxnClient interface {
	DeleteEmailBody(ctx context.Context, in *EmailBodyDeleteRequest, opts ...grpc.CallOption) (*EmailBodyDeleteResponse, error)
}

type emailBodyDeleteTxnClient struct {
	cc grpc.ClientConnInterface
}

func NewEmailBodyDeleteTxnClient(cc grpc.ClientConnInterface) EmailBodyDeleteTxnClient {
	return &emailBodyDeleteTxnClient{cc}
}

func (c *emailBodyDeleteTxnClient) DeleteEmailBody(ctx context.Context, in *EmailBodyDeleteRequest, opts ...grpc.CallOption) (*EmailBodyDeleteResponse, error) {
	out := new(EmailBodyDeleteResponse)
	err := c.cc.Invoke(ctx, "/emailbody.EmailBodyDeleteTxn/DeleteEmailBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailBodyDeleteTxnServer is the server API for EmailBodyDeleteTxn service.
type EmailBodyDeleteTxnServer interface {
	DeleteEmailBody(context.Context, *EmailBodyDeleteRequest) (*EmailBodyDeleteResponse, error)
}

// UnimplementedEmailBodyDeleteTxnServer can be embedded to have forward compatible implementations.
type UnimplementedEmailBodyDeleteTxnServer struct {
}

func (*UnimplementedEmailBodyDeleteTxnServer) DeleteEmailBody(context.Context, *EmailBodyDeleteRequest) (*EmailBodyDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEmailBody not implemented")
}

func RegisterEmailBodyDeleteTxnServer(s *grpc.Server, srv EmailBodyDeleteTxnServer) {
	s.RegisterService(&_EmailBodyDeleteTxn_serviceDesc, srv)
}

func _EmailBodyDeleteTxn_DeleteEmailBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailBodyDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailBodyDeleteTxnServer).DeleteEmailBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emailbody.EmailBodyDeleteTxn/DeleteEmailBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailBodyDeleteTxnServer).DeleteEmailBody(ctx, req.(*EmailBodyDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailBodyDeleteTxn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "emailbody.EmailBodyDeleteTxn",
	HandlerType: (*EmailBodyDeleteTxnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteEmailBody",
			Handler:    _EmailBodyDeleteTxn_DeleteEmailBody_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "emailbody.proto",
}
