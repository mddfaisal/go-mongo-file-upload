// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: attachment.proto

package attachment

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AttachmentCreateFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid     string `protobuf:"bytes,1,opt,name=Muid,json=muid,proto3" json:"Muid,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=FileName,json=fileName,proto3" json:"FileName,omitempty"`
}

func (x *AttachmentCreateFileRequest) Reset() {
	*x = AttachmentCreateFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attachment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentCreateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentCreateFileRequest) ProtoMessage() {}

func (x *AttachmentCreateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attachment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentCreateFileRequest.ProtoReflect.Descriptor instead.
func (*AttachmentCreateFileRequest) Descriptor() ([]byte, []int) {
	return file_attachment_proto_rawDescGZIP(), []int{0}
}

func (x *AttachmentCreateFileRequest) GetMuid() string {
	if x != nil {
		return x.Muid
	}
	return ""
}

func (x *AttachmentCreateFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type AttachmentCreateFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   string `protobuf:"bytes,1,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	FilePath string `protobuf:"bytes,2,opt,name=FilePath,json=filePath,proto3" json:"FilePath,omitempty"`
}

func (x *AttachmentCreateFileResponse) Reset() {
	*x = AttachmentCreateFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attachment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentCreateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentCreateFileResponse) ProtoMessage() {}

func (x *AttachmentCreateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attachment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentCreateFileResponse.ProtoReflect.Descriptor instead.
func (*AttachmentCreateFileResponse) Descriptor() ([]byte, []int) {
	return file_attachment_proto_rawDescGZIP(), []int{1}
}

func (x *AttachmentCreateFileResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AttachmentCreateFileResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type AttachmentFileDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
}

func (x *AttachmentFileDataRequest) Reset() {
	*x = AttachmentFileDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attachment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentFileDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentFileDataRequest) ProtoMessage() {}

func (x *AttachmentFileDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attachment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentFileDataRequest.ProtoReflect.Descriptor instead.
func (*AttachmentFileDataRequest) Descriptor() ([]byte, []int) {
	return file_attachment_proto_rawDescGZIP(), []int{2}
}

func (x *AttachmentFileDataRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AttachmentFileDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
}

func (x *AttachmentFileDataResponse) Reset() {
	*x = AttachmentFileDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attachment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentFileDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentFileDataResponse) ProtoMessage() {}

func (x *AttachmentFileDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attachment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentFileDataResponse.ProtoReflect.Descriptor instead.
func (*AttachmentFileDataResponse) Descriptor() ([]byte, []int) {
	return file_attachment_proto_rawDescGZIP(), []int{3}
}

func (x *AttachmentFileDataResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_attachment_proto protoreflect.FileDescriptor

var file_attachment_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4d,
	0x0a, 0x1b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x4d, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a,
	0x1c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x2f, 0x0a, 0x19, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x34, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x83, 0x01, 0x0a, 0x14, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x6b, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x7d,
	0x0a, 0x11, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x54, 0x78, 0x6e, 0x12, 0x68, 0x0a, 0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_attachment_proto_rawDescOnce sync.Once
	file_attachment_proto_rawDescData = file_attachment_proto_rawDesc
)

func file_attachment_proto_rawDescGZIP() []byte {
	file_attachment_proto_rawDescOnce.Do(func() {
		file_attachment_proto_rawDescData = protoimpl.X.CompressGZIP(file_attachment_proto_rawDescData)
	})
	return file_attachment_proto_rawDescData
}

var file_attachment_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_attachment_proto_goTypes = []interface{}{
	(*AttachmentCreateFileRequest)(nil),  // 0: attachment.AttachmentCreateFileRequest
	(*AttachmentCreateFileResponse)(nil), // 1: attachment.AttachmentCreateFileResponse
	(*AttachmentFileDataRequest)(nil),    // 2: attachment.AttachmentFileDataRequest
	(*AttachmentFileDataResponse)(nil),   // 3: attachment.AttachmentFileDataResponse
}
var file_attachment_proto_depIdxs = []int32{
	0, // 0: attachment.AttachmentCreateFile.AttachmentCreateFile:input_type -> attachment.AttachmentCreateFileRequest
	2, // 1: attachment.AttachmentPostTxn.WriteAttachmentFile:input_type -> attachment.AttachmentFileDataRequest
	1, // 2: attachment.AttachmentCreateFile.AttachmentCreateFile:output_type -> attachment.AttachmentCreateFileResponse
	3, // 3: attachment.AttachmentPostTxn.WriteAttachmentFile:output_type -> attachment.AttachmentFileDataResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_attachment_proto_init() }
func file_attachment_proto_init() {
	if File_attachment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_attachment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentCreateFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attachment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentCreateFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attachment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentFileDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attachment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentFileDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_attachment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_attachment_proto_goTypes,
		DependencyIndexes: file_attachment_proto_depIdxs,
		MessageInfos:      file_attachment_proto_msgTypes,
	}.Build()
	File_attachment_proto = out.File
	file_attachment_proto_rawDesc = nil
	file_attachment_proto_goTypes = nil
	file_attachment_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AttachmentCreateFileClient is the client API for AttachmentCreateFile service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttachmentCreateFileClient interface {
	AttachmentCreateFile(ctx context.Context, in *AttachmentCreateFileRequest, opts ...grpc.CallOption) (*AttachmentCreateFileResponse, error)
}

type attachmentCreateFileClient struct {
	cc grpc.ClientConnInterface
}

func NewAttachmentCreateFileClient(cc grpc.ClientConnInterface) AttachmentCreateFileClient {
	return &attachmentCreateFileClient{cc}
}

func (c *attachmentCreateFileClient) AttachmentCreateFile(ctx context.Context, in *AttachmentCreateFileRequest, opts ...grpc.CallOption) (*AttachmentCreateFileResponse, error) {
	out := new(AttachmentCreateFileResponse)
	err := c.cc.Invoke(ctx, "/attachment.AttachmentCreateFile/AttachmentCreateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttachmentCreateFileServer is the server API for AttachmentCreateFile service.
type AttachmentCreateFileServer interface {
	AttachmentCreateFile(context.Context, *AttachmentCreateFileRequest) (*AttachmentCreateFileResponse, error)
}

// UnimplementedAttachmentCreateFileServer can be embedded to have forward compatible implementations.
type UnimplementedAttachmentCreateFileServer struct {
}

func (*UnimplementedAttachmentCreateFileServer) AttachmentCreateFile(context.Context, *AttachmentCreateFileRequest) (*AttachmentCreateFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachmentCreateFile not implemented")
}

func RegisterAttachmentCreateFileServer(s *grpc.Server, srv AttachmentCreateFileServer) {
	s.RegisterService(&_AttachmentCreateFile_serviceDesc, srv)
}

func _AttachmentCreateFile_AttachmentCreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachmentCreateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttachmentCreateFileServer).AttachmentCreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/attachment.AttachmentCreateFile/AttachmentCreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttachmentCreateFileServer).AttachmentCreateFile(ctx, req.(*AttachmentCreateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AttachmentCreateFile_serviceDesc = grpc.ServiceDesc{
	ServiceName: "attachment.AttachmentCreateFile",
	HandlerType: (*AttachmentCreateFileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AttachmentCreateFile",
			Handler:    _AttachmentCreateFile_AttachmentCreateFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "attachment.proto",
}

// AttachmentPostTxnClient is the client API for AttachmentPostTxn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttachmentPostTxnClient interface {
	WriteAttachmentFile(ctx context.Context, opts ...grpc.CallOption) (AttachmentPostTxn_WriteAttachmentFileClient, error)
}

type attachmentPostTxnClient struct {
	cc grpc.ClientConnInterface
}

func NewAttachmentPostTxnClient(cc grpc.ClientConnInterface) AttachmentPostTxnClient {
	return &attachmentPostTxnClient{cc}
}

func (c *attachmentPostTxnClient) WriteAttachmentFile(ctx context.Context, opts ...grpc.CallOption) (AttachmentPostTxn_WriteAttachmentFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AttachmentPostTxn_serviceDesc.Streams[0], "/attachment.AttachmentPostTxn/WriteAttachmentFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &attachmentPostTxnWriteAttachmentFileClient{stream}
	return x, nil
}

type AttachmentPostTxn_WriteAttachmentFileClient interface {
	Send(*AttachmentFileDataRequest) error
	CloseAndRecv() (*AttachmentFileDataResponse, error)
	grpc.ClientStream
}

type attachmentPostTxnWriteAttachmentFileClient struct {
	grpc.ClientStream
}

func (x *attachmentPostTxnWriteAttachmentFileClient) Send(m *AttachmentFileDataRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *attachmentPostTxnWriteAttachmentFileClient) CloseAndRecv() (*AttachmentFileDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AttachmentFileDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AttachmentPostTxnServer is the server API for AttachmentPostTxn service.
type AttachmentPostTxnServer interface {
	WriteAttachmentFile(AttachmentPostTxn_WriteAttachmentFileServer) error
}

// UnimplementedAttachmentPostTxnServer can be embedded to have forward compatible implementations.
type UnimplementedAttachmentPostTxnServer struct {
}

func (*UnimplementedAttachmentPostTxnServer) WriteAttachmentFile(AttachmentPostTxn_WriteAttachmentFileServer) error {
	return status.Errorf(codes.Unimplemented, "method WriteAttachmentFile not implemented")
}

func RegisterAttachmentPostTxnServer(s *grpc.Server, srv AttachmentPostTxnServer) {
	s.RegisterService(&_AttachmentPostTxn_serviceDesc, srv)
}

func _AttachmentPostTxn_WriteAttachmentFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AttachmentPostTxnServer).WriteAttachmentFile(&attachmentPostTxnWriteAttachmentFileServer{stream})
}

type AttachmentPostTxn_WriteAttachmentFileServer interface {
	SendAndClose(*AttachmentFileDataResponse) error
	Recv() (*AttachmentFileDataRequest, error)
	grpc.ServerStream
}

type attachmentPostTxnWriteAttachmentFileServer struct {
	grpc.ServerStream
}

func (x *attachmentPostTxnWriteAttachmentFileServer) SendAndClose(m *AttachmentFileDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *attachmentPostTxnWriteAttachmentFileServer) Recv() (*AttachmentFileDataRequest, error) {
	m := new(AttachmentFileDataRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AttachmentPostTxn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "attachment.AttachmentPostTxn",
	HandlerType: (*AttachmentPostTxnServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WriteAttachmentFile",
			Handler:       _AttachmentPostTxn_WriteAttachmentFile_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "attachment.proto",
}
